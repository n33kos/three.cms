<?php
		
	class light {
		var $lightMode;
		var $lightIntensity;
		var $lightColor;
	    function light() {
			$this->lightMode = 'spot';
			$this->lightIntensity = 2.0;
			$this->lightColor = '0xffffff';
	    }
	    function setlightMode($lmin){
	    	$this->lightMode = $lmin;
	    }
	}

		
	//--------------------------GLOBALS----------------------------
	global $scriptIncludes, $canvasTarget, $renderMode, $controlMode, $cameraPosition, $cameraPerspective, $sceneFile, $sceneTex;
	
	//Canvas Target as jQuery Element
	$canvasTarget = 'body';

	//Script Includes Array
	$scriptIncludes = array(
		'jQuery'  => 'js/jquery-1.11.0.min.js'
,		'threemin'  => 'threejs/three.min.js'
	);

	//Shader Includes Array - These scripts are automatically activated by a foreach, 
	//you can combine more than one shader simultaneously.
	$usePixelShaders = true;
	$shaderIncludes = array(
		//'bleachBypassShader' => 'threejs/shaders/BleachBypassShader.js',
		//'colorifyShader' => 'threejs/shaders/ColorifyShader.js',
		//'dotScreenShader' => 'threejs/shaders/DotScreenShader.js',
		//'brightnessContrastShader' => 'threejs/shaders/BrightnessContrastShader.js',
		//'colorCorrectionShader' => 'threejs/shaders/ColorCorrectionShader.js',
		//'filmShader' => 'threejs/shaders/FilmShader.js',
		//'focusShader' => 'threejs/shaders/FocusShader.js',
		//'horizontalBlurShader' => 'threejs/shaders/HorizontalBlurShader.js',
		//'verticalBlurShader' => 'threejs/shaders/VerticalBlurShader.js',
		//'verticalTiltShiftShader' => 'threejs/shaders/VerticalTiltShiftShader.js'
		//'hueSaturationShader' => 'threejs/shaders/HueSaturationShader.js',
		//'kaleidoShader' => 'threejs/shaders/KaleidoShader.js',
		//'luminosityShader' => 'threejs/shaders/LuminosityShader.js',
		//'mirrorShader' => 'threejs/shaders/MirrorShader.js',
		//'rgbShiftShader' => 'threejs/shaders/RGBShiftShader.js',
		//'sepiaShader' => 'threejs/shaders/SepiaShader.js',
		//'vignetteShader' => 'threejs/shaders/VignetteShader.js'
		//'edgeDetectionFreiChenShader' => 'threejs/shaders/EdgeShader.js'
		//'edgeDetectionSobelShader' => 'threejs/shaders/EdgeShader2.js'
		//'fxaaShader' => 'threejs/shaders/FXAAShader.js'
	);

	//$renderMode options: WebGL, Canvas, ASCII
	$renderMode = 'WebGL';

	//Ambient Occlusion Bit
	$ao_bit = false;

	//$controlMode options: OrbitControls, FlyControls, PointerLockControls
	$controlMode = 'PointerLockControls';

	//Camera Settings
	$cameraPosition = '0, 1.75, 0';
	$cameraPerspective = '50';
	$camNear='0.25';
	$camFar='1000';

	//$lightmode options: directional, hemisphere, ambient, point, area, spot
	$lights[] = new light;
	$lights[] = new light;
	$lights[0]->setlightMode('spot');
	$lights[1]->setlightMode('ambient');

	//Realtime-Shadows
	$realtimeShadows_bit = true;
	//$realtimeShadowSmooth options: BasicShadowMap, PCFShadowMap, PCFSoftShadowMap
	$realtimeShadowSmooth = 'PCFSoftShadowMap';

	//Linear Fog Settings
	$linearfog_bit = false;
	$linearfogColor = '#000';
	$linearfogNear = '0.25';
	$linearfogFar = '200';
	//exponential fog settings
	$exponentialfog_bit = false;
	$exponentialfogColor = '#000';
	$exponentialfogDensity = '.005';
	
	//later on the following two should be replaced with an array for multi-scenes and textures
	$sceneFile = 'scenes/TestScene.js';
	$sceneTex = 'img/DreamOak.jpg';
	
	//---------------------SKYBOX STUFF-------------------------
	$useSkybox = true;
	$skyboxScale = 1000;
	$skyboxTextures = array(
		'right' => 'textures/cube/skybox/px.jpg',
		'left' => 'textures/cube/skybox/nx.jpg',
		'top' => 'textures/cube/skybox/py.jpg',
		'bottom' => 'textures/cube/skybox/ny.jpg',
		'back' => 'textures/cube/skybox/pz.jpg',
		'front' => 'textures/cube/skybox/nz.jpg'
	);

?>